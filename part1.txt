Part 1: 
Enter your answer in the designated location. Do NOT remove lines that start
with '=' signs and keep lines to a max of 80 chars long.

================================== Q1 start ===================================
1.  What actions does a kernel perform to context switch between processes?

The kernel will save a few register values for the currently-executing process,
as well as other machine state in the process PCB. Meanwhile, it will restore
the registers for the soon-to-be-executing process from its kernel stack. By 
doing so, the OS could ensure that when the return-from-trap instruction is
finally executed, instead of returning to the process that was running, the 
system resumes execution of another process.

=================================== Q1 end ====================================


================================== Q2 start ===================================
2.  What process state does a process enter immediately after it terminates?
    What is this state for, and when does it leave this state?

The process will enter a final state(or zombie state) immediately after it 
terminates. The state allows other process(usually the parent that created the
process) to examine the return code of the process and see if it the process
excuted successfully). The process will be in zombie state until the parent
process releases the slot in the 'process' table. The parent process will make
a final call, for example the wait() sys call, and clean up its zombie process.

=================================== Q2 end ====================================


================================== Q3 start ===================================
3.  What is typeof? Is it a C language keyword, function, or macro? What does
    it do?

Typeof is a C language keyword. It acts like the name of a type and specifies 
a type.

=================================== Q3 end ====================================


================================== Q4 start ===================================
4.  What is offsetof? Is it a keyword, function, or macro? What does it do?

Offsetof is a C library macro. It results in a byte offset of a member to the
beginning of the structure. The name of the structure is given in type and the
member is given by member-designator.

=================================== Q4 end ====================================


================================== Q5 start ===================================
5.  What does the container_of() macro do?

The container_of() macro subtracts the offset of the structure's member from
its address yielding the address of the whole contrainer structure.

=================================== Q5 end ====================================


================================== Q6 start ===================================
6.  The container_of() macro, in the way itâ€™s currently written, is not
    portable across C compilers because it uses GNU-specific language
    extensions. Can you identify what they are?

Here it has a braced-group within expression - ({}), and it is a GNU-specific
extention to C language. The compiler will evaluate the whole block and use the 
value of the last statement contained in the block.

=================================== Q6 end ====================================


================================== Q7 start ===================================
7.  The container_of() macro has two lines. Is the 1st line (the declaration of
    __mptr) really necessary? Is it possible to rewrite the macro without it?
    What is the purpose of that 1st line?

The first line here is actually not important for the result of the macro. We 
could still get the same result without the first line. However, it is important
for type checking purpose. All the compiler cares for here is its type.

=================================== Q7 end ====================================
